// <auto-generated />
using EFIntro.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFIntro.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EFIntro.Models.BranchModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Area")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Riyadh",
                            Area = "idk",
                            Name = "RH-321"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Jeddah",
                            Area = "idk",
                            Name = "JED-453"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Riyadh",
                            Area = "idk",
                            Name = "RH-332"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Jeddah",
                            Area = "idk",
                            Name = "JED-55"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Riyadh",
                            Area = "idk",
                            Name = "RH-55"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Qassim",
                            Area = "idk",
                            Name = "QA-55"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Median",
                            Area = "idk",
                            Name = "MD-55"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Makkah",
                            Area = "idk",
                            Name = "MK-55"
                        },
                        new
                        {
                            Id = 9,
                            Address = "Riyadh",
                            Area = "idk",
                            Name = "RH-55"
                        },
                        new
                        {
                            Id = 10,
                            Address = "Yunbu",
                            Area = "idk",
                            Name = "YU-55"
                        });
                });

            modelBuilder.Entity("EFIntro.Models.CustomerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "efkdl@email.com",
                            FirstName = "ahmed",
                            LastName = "okdlkio"
                        },
                        new
                        {
                            Id = 2,
                            Email = "efkdl@email.com",
                            FirstName = "khalid",
                            LastName = "dfsfds"
                        },
                        new
                        {
                            Id = 3,
                            Email = "efkdl@email.com",
                            FirstName = "sara",
                            LastName = "sadsa"
                        },
                        new
                        {
                            Id = 4,
                            Email = "efkdl@email.com",
                            FirstName = "nora",
                            LastName = "fwerf"
                        });
                });

            modelBuilder.Entity("EFIntro.Models.CustomerProductModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("CustomerProductModel");
                });

            modelBuilder.Entity("EFIntro.Models.ProductModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<float>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("EFIntro.Models.ProfileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("EFIntro.Models.CustomerProductModel", b =>
                {
                    b.HasOne("EFIntro.Models.CustomerModel", "Customer")
                        .WithMany("CustomerProduct")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFIntro.Models.ProductModel", "Product")
                        .WithMany("CustomerProduct")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFIntro.Models.ProductModel", b =>
                {
                    b.HasOne("EFIntro.Models.BranchModel", "Branch")
                        .WithMany("Products")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFIntro.Models.ProfileModel", b =>
                {
                    b.HasOne("EFIntro.Models.CustomerModel", "Customer")
                        .WithOne("Profile")
                        .HasForeignKey("EFIntro.Models.ProfileModel", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
