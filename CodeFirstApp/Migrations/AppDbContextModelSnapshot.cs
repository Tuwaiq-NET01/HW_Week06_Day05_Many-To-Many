// <auto-generated />
using CodeFirstApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CodeFirstApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CodeFirstApp.Models.BranchModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("ID");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Area = "Riyadh",
                            Email = "saud.alshammari@tuwaiq.edu.sa",
                            Name = "Saud"
                        },
                        new
                        {
                            ID = 2,
                            Area = "Riyadh",
                            Email = "saud.alshammari@tuwaiq.edu.sa",
                            Name = "Saud"
                        },
                        new
                        {
                            ID = 3,
                            Area = "Riyadh",
                            Email = "saud.alshammari@tuwaiq.edu.sa",
                            Name = "Saud"
                        },
                        new
                        {
                            ID = 4,
                            Area = "Riyadh",
                            Email = "saud.alshammari@tuwaiq.edu.sa",
                            Name = "Saud"
                        },
                        new
                        {
                            ID = 5,
                            Area = "Dammam",
                            Email = "saud.alshammari@tuwaiq.edu.sa",
                            Name = "Saud"
                        },
                        new
                        {
                            ID = 6,
                            Area = "Dammam",
                            Email = "saud.alshammari@tuwaiq.edu.sa",
                            Name = "Saud"
                        },
                        new
                        {
                            ID = 7,
                            Area = "Hafr-Albatin",
                            Email = "saud.alshammari@tuwaiq.edu.sa",
                            Name = "Saud"
                        },
                        new
                        {
                            ID = 8,
                            Area = "Jeddah",
                            Email = "saud.alshammari@tuwaiq.edu.sa",
                            Name = "Saud"
                        });
                });

            modelBuilder.Entity("CodeFirstApp.Models.CustomerModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Email = "saud.alshammari@tuwaiq.edu.sa",
                            FirstName = "Fahad",
                            LastName = "Anas"
                        },
                        new
                        {
                            ID = 2,
                            Email = "saud.alshammari@tuwaiq.edu.sa",
                            FirstName = "Fahad",
                            LastName = "Anas"
                        },
                        new
                        {
                            ID = 3,
                            Email = "saud.alshammari@tuwaiq.edu.sa",
                            FirstName = "Fahad",
                            LastName = "Anas"
                        },
                        new
                        {
                            ID = 4,
                            Email = "saud.alshammari@tuwaiq.edu.sa",
                            FirstName = "Fahad",
                            LastName = "Anas"
                        },
                        new
                        {
                            ID = 5,
                            Email = "saud.alshammari@tuwaiq.edu.sa",
                            FirstName = "Fahad",
                            LastName = "Anas"
                        },
                        new
                        {
                            ID = 6,
                            Email = "saud.alshammari@tuwaiq.edu.sa",
                            FirstName = "Fahad",
                            LastName = "Anas"
                        });
                });

            modelBuilder.Entity("CodeFirstApp.Models.OrderModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripton")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CodeFirstApp.Models.ProductModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25);

                    b.Property<float>("Price")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("BranchID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("CodeFirstApp.Models.Product_Order", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("Product_Order");
                });

            modelBuilder.Entity("CodeFirstApp.Models.ProfileModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("CodeFirstApp.Models.ProductModel", b =>
                {
                    b.HasOne("CodeFirstApp.Models.BranchModel", "Branch")
                        .WithMany("Products")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CodeFirstApp.Models.Product_Order", b =>
                {
                    b.HasOne("CodeFirstApp.Models.OrderModel", "Order")
                        .WithMany("Product_Orders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeFirstApp.Models.ProductModel", "Product")
                        .WithMany("Product_Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CodeFirstApp.Models.ProfileModel", b =>
                {
                    b.HasOne("CodeFirstApp.Models.CustomerModel", "Customer")
                        .WithOne("profile")
                        .HasForeignKey("CodeFirstApp.Models.ProfileModel", "CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
