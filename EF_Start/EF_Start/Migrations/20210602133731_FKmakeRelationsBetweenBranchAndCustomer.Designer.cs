// <auto-generated />
using EF_Start.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EF_Start.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210602133731_FKmakeRelationsBetweenBranchAndCustomer")]
    partial class FKmakeRelationsBetweenBranchAndCustomer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EF_Start.Models.BranchModels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Branchs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "riyadh",
                            Area = "Alnakul",
                            Name = "Branch01"
                        },
                        new
                        {
                            Id = 2,
                            Address = "riyadh",
                            Area = "Alnakul",
                            Name = "Branch02"
                        },
                        new
                        {
                            Id = 3,
                            Address = "riyadh",
                            Area = "Alnakul",
                            Name = "Branch03"
                        });
                });

            modelBuilder.Entity("EF_Start.Models.CustomerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Hussain"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Meshal"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Thamer"
                        });
                });

            modelBuilder.Entity("EF_Start.Models.ProductModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<float>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("EF_Start.Models.ProfileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CustomerID")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("EF_Start.Models.ProductModel", b =>
                {
                    b.HasOne("EF_Start.Models.BranchModels", "Branch")
                        .WithMany("Products")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EF_Start.Models.ProfileModel", b =>
                {
                    b.HasOne("EF_Start.Models.CustomerModel", "Customer")
                        .WithOne("Profile")
                        .HasForeignKey("EF_Start.Models.ProfileModel", "CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
